"""
–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –±–æ—Ç–∞.
"""

from random import randint, choice
from typing import Optional
from aiogram.types import User, Message
import os


def get_user_display_name(user: User) -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: username > first_name + last_name > "Anonymous"
    
    Args:
        user: –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
    
    Returns:
        str: –û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    if user.username:
        return f"@{user.username}"
    
    # –ï—Å–ª–∏ –Ω–µ—Ç username, –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é
    name_parts = []
    if user.first_name:
        name_parts.append(user.first_name)
    if user.last_name:
        name_parts.append(user.last_name)
    
    if name_parts:
        return " ".join(name_parts)
    
    # –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∏ username, –Ω–∏ –∏–º–µ–Ω–∏
    return "Anonymous"


def extract_custom_text(message: Message) -> Optional[str]:
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ç–µ–∫—Å—Ç –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ–º–∞–Ω–¥–æ–π /tea.
    –£–¥–∞–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—É /tea –∏–∑ –Ω–∞—á–∞–ª–∞ —Ç–µ–∫—Å—Ç–∞.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    
    Returns:
        Optional[str]: –¢–µ–∫—Å—Ç –±–µ–∑ –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ None
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º caption (–¥–ª—è –º–µ–¥–∏–∞)
    text = message.caption if message.caption else message.text
    
    if not text:
        return None
    
    # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É /tea –∏–∑ –Ω–∞—á–∞–ª–∞
    text = text.strip()
    if text.lower().startswith("/tea"):
        text = text[4:].strip()
    
    # –ï—Å–ª–∏ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –æ—Å—Ç–∞–ª—Å—è —Ç–µ–∫—Å—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ
    return text if text else None

def get_random_teamoji() -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —ç–º–æ–¥–∑–∏ —á–∞—è.
    """
    teamojies = ["üçµ", "ü´ñ", "üå±", "üçÉ", "üçØ", "üç´", "üç™", " "]
    return teamojies[randint(0, len(teamojies) - 1)]

def format_tea_caption(username: str, custom_text: Optional[str] = None) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–ø–∏—Å—å –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª–µ.
    
    Args:
        username: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        custom_text: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Returns:
        str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å—å
    """
    if custom_text:
        return f'{get_random_teamoji()} {get_random_teamoji()} –ß–∞–π. "{custom_text}"\nby {username}'
    return f"{get_random_teamoji()} {get_random_teamoji()} –ß–∞–π {get_random_teamoji()} {get_random_teamoji()}\nby {username}"


def get_message_type(message: Message) -> str:
    """
    –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    
    Returns:
        str: –¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è (text, photo, video, video_note)
    """
    if message.photo:
        return "photo"
    elif message.video:
        return "video"
    elif message.video_note:
        return "video_note"
    else:
        return "text"


def get_random_quotation() -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é —Ü–∏—Ç–∞—Ç—É –∏–∑ —Ñ–∞–π–ª–∞ quotation.txt.
    
    Returns:
        str: –°–ª—É—á–∞–π–Ω–∞—è —Ü–∏—Ç–∞—Ç–∞
    """
    try:
        # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Ü–∏—Ç–∞—Ç –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
        quotation_file = os.path.join(os.path.dirname(os.path.dirname(os.path.dirname(__file__))), "quotation.txt")
        
        if not os.path.exists(quotation_file):
            return "–¶–∏—Ç–∞—Ç—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. üçµ"
        
        with open(quotation_file, 'r', encoding='utf-8') as f:
            quotations = [line.strip() for line in f.readlines() if line.strip()]
        
        if not quotations:
            return "–¶–∏—Ç–∞—Ç—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. üçµ"
        
        return choice(quotations)
    
    except Exception:
        return "–¶–∏—Ç–∞—Ç—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. üçµ"


def format_quote_caption(username: str, custom_text: Optional[str] = None) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–ø–∏—Å—å –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ü–∏—Ç–∞—Ç—ã –≤ –∫–∞–Ω–∞–ª–µ.
    
    Args:
        username: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        custom_text: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è –¥–ª—è —Ü–∏—Ç–∞—Ç)
    
    Returns:
        str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å—å —Å —Ü–∏—Ç–∞—Ç–æ–π
    """
    quotation = get_random_quotation()
    return f'{get_random_teamoji()} {get_random_teamoji()} –¶–∏—Ç–∞—Ç–∞ {get_random_teamoji()} {get_random_teamoji()}\n\n{quotation}\n\nby {username}'

