"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞.
"""

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.exceptions import TelegramAPIError

from src.config import config
from src.logger import logger
from src.database.repository import db_repo
from src.utils.helpers import (
    get_user_display_name,
    extract_custom_text,
    format_tea_caption,
    get_message_type
)

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
router = Router()


def is_admin(user_id: int) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.
    
    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Returns:
        bool: True –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω
    """
    return user_id in config.ADMINS


def is_correct_chat(message: Message) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –Ω—É–∂–Ω–æ–π –≥—Ä—É–ø–ø—ã.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    
    Returns:
        bool: True –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —á–∞—Ç–∞
    """
    return message.chat.id == config.GROUP_ID


@router.message(Command("help"))
async def cmd_help(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.
    """
    if not is_correct_chat(message):
        return
    
    help_text = """
üçµ <b>TeaBot v3.0 - –°–ø—Ä–∞–≤–∫–∞</b>

<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>

/tea - –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∞–Ω–æ–Ω—Å –≤ –∫–∞–Ω–∞–ª–µ
  ‚Ä¢ –ü—Ä–æ—Å—Ç–æ /tea - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∞–Ω–æ–Ω—Å
  ‚Ä¢ /tea —Å —Ñ–æ—Ç–æ - —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é
  ‚Ä¢ /tea —Ç–µ–∫—Å—Ç —Å —Ñ–æ—Ç–æ - —Ñ–æ—Ç–æ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º

/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ

<b>–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:</b>
/stats - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–µ—Ä–µ—Å—ã–ª–æ–∫ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
/reset - –°–±—Ä–æ—Å–∏—Ç—å —Å—á—ë—Ç—á–∏–∫ –ø–µ—Ä–µ—Å—ã–ª–æ–∫

<b>–õ–∏–º–∏—Ç—ã:</b>
‚Ä¢ {limit} –ø–µ—Ä–µ—Å—ã–ª–æ–∫ –≤ —Å—É—Ç–∫–∏
‚Ä¢ –°–±—Ä–æ—Å –≤ {reset_hour}:00 –ú–°–ö
    """.format(limit=config.DAILY_LIMIT, reset_hour=config.RESET_HOUR)
    
    await message.answer(help_text.strip(), parse_mode="HTML")
    logger.info(f"Help command used by {get_user_display_name(message.from_user)}")


@router.message(Command("stats"))
async def cmd_stats(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–µ—Ä–µ—Å—ã–ª–æ–∫ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤).
    """
    if not is_correct_chat(message):
        return
    
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
        logger.warning(f"Unauthorized stats attempt by {get_user_display_name(message.from_user)}")
        return
    
    today_count = db_repo.get_today_count()
    remaining = max(0, config.DAILY_LIMIT - today_count)
    
    stats_text = f"""
üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–æ–∫</b>

–°–µ–≥–æ–¥–Ω—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {today_count}/{config.DAILY_LIMIT}
–û—Å—Ç–∞–ª–æ—Å—å: {remaining}
    """
    
    await message.answer(stats_text.strip(), parse_mode="HTML")
    logger.info(f"Stats viewed by admin {get_user_display_name(message.from_user)}")


@router.message(Command("reset"))
async def cmd_reset(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /reset.
    –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—á—ë—Ç—á–∏–∫ –ø–µ—Ä–µ—Å—ã–ª–æ–∫ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤).
    """
    if not is_correct_chat(message):
        return
    
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
        logger.warning(f"Unauthorized reset attempt by {get_user_display_name(message.from_user)}")
        return
    
    deleted = db_repo.reset_today()
    await message.answer(f"‚úÖ –°—á—ë—Ç—á–∏–∫ —Å–±—Ä–æ—à–µ–Ω. –£–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {deleted}")
    logger.info(f"Forwards reset by admin {get_user_display_name(message.from_user)}, deleted: {deleted}")


@router.message(Command("tea"))
async def cmd_tea(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /tea.
    –ü—É–±–ª–∏–∫—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª–µ —Å —É—á—ë—Ç–æ–º –ª–∏–º–∏—Ç–æ–≤.
    """
    if not is_correct_chat(message):
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç
    today_count = db_repo.get_today_count()
    if today_count >= config.DAILY_LIMIT:
        await message.answer("‚è∞ –°–ª–µ–¥—É—é—â–∏–π –∞–Ω–æ–Ω—Å –∑–∞–≤—Ç—Ä–∞!")
        logger.warning(f"Limit reached for {get_user_display_name(message.from_user)}")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    username = get_user_display_name(message.from_user)
    custom_text = extract_custom_text(message)
    message_type = get_message_type(message)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å
    caption = format_tea_caption(username, custom_text)
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∫–∞–Ω–∞–ª –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        if message.photo:
            # –ë–µ—Ä—ë–º —Ñ–æ—Ç–æ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º
            photo = message.photo[-1]
            await message.bot.send_photo(
                chat_id=config.CHANNEL_ID,
                photo=photo.file_id,
                caption=caption
            )
        elif message.video:
            await message.bot.send_video(
                chat_id=config.CHANNEL_ID,
                video=message.video.file_id,
                caption=caption
            )
        elif message.video_note:
            # –í–∏–¥–µ–æ-–∑–∞–º–µ—Ç–∫–∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç caption
            await message.bot.send_video_note(
                chat_id=config.CHANNEL_ID,
                video_note=message.video_note.file_id
            )
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º caption –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
            await message.bot.send_message(
                chat_id=config.CHANNEL_ID,
                text=caption
            )
        else:
            # –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await message.bot.send_message(
                chat_id=config.CHANNEL_ID,
                text=caption
            )
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ë–î
        db_repo.add_forward(username, message_type)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á—ë—Ç—á–∏–∫
        remaining = config.DAILY_LIMIT - today_count - 1
        await message.answer(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –û—Å—Ç–∞–ª–æ—Å—å {remaining} –ø–µ—Ä–µ—Å—ã–ª–æ–∫.")
        
        logger.info(f"Sent {message_type} tea by {username}")
        
    except TelegramAPIError as e:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª.")
        logger.error(f"Failed to send message to channel: {e}")
    except Exception as e:
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.")
        logger.error(f"Unexpected error in tea command: {e}")

