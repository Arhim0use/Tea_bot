"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞.
"""

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.exceptions import TelegramAPIError
from datetime import datetime, timedelta
import pytz

from src.config import config
from src.logger import logger
from src.database.repository import db_repo
from src.utils.helpers import (
    get_user_display_name,
    extract_custom_text,
    format_tea_caption,
    get_message_type
)

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
router = Router()


def is_admin(user_id: int) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.
    
    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Returns:
        bool: True –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω
    """
    return user_id in config.ADMINS


def is_correct_chat(message: Message) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –Ω—É–∂–Ω–æ–π –≥—Ä—É–ø–ø—ã.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    
    Returns:
        bool: True –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —á–∞—Ç–∞
    """
    return message.chat.id == config.GROUP_ID


@router.message(Command("help"))
async def cmd_help(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.
    """
    if not is_correct_chat(message):
        return
    
    help_text = """
üçµ <b>TeaBot v3.0 - –°–ø—Ä–∞–≤–∫–∞</b>

<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>

/tea - –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∞–Ω–æ–Ω—Å –≤ –∫–∞–Ω–∞–ª–µ
  ‚Ä¢ –ü—Ä–æ—Å—Ç–æ /tea - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∞–Ω–æ–Ω—Å
  ‚Ä¢ /tea —Å —Ñ–æ—Ç–æ - —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é
  ‚Ä¢ /tea —Ç–µ–∫—Å—Ç —Å —Ñ–æ—Ç–æ - —Ñ–æ—Ç–æ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º

/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ

<b>–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:</b>
/stats - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–µ—Ä–µ—Å—ã–ª–æ–∫ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
/reset - –°–±—Ä–æ—Å–∏—Ç—å —Å—á—ë—Ç—á–∏–∫ –ø–µ—Ä–µ—Å—ã–ª–æ–∫
/ban - –ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  ‚Ä¢ –§–æ—Ä–º–∞—Ç: /ban @username hours [reason]
  ‚Ä¢ –ü—Ä–∏–º–µ—Ä: /ban @user123 24 –°–ø–∞–º
/unban - –†–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  ‚Ä¢ –§–æ—Ä–º–∞—Ç: /unban @username –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ

<b>–õ–∏–º–∏—Ç—ã:</b>
‚Ä¢ {limit} –ø–µ—Ä–µ—Å—ã–ª–æ–∫ –≤ —Å—É—Ç–∫–∏
‚Ä¢ –°–±—Ä–æ—Å –≤ {reset_hour}:00 –ú–°–ö
‚Ä¢ Timeout –º–µ–∂–¥—É –∞–Ω–æ–Ω—Å–∞–º–∏: {timeout} –º–∏–Ω—É—Ç
    """.format(
        limit=config.DAILY_LIMIT, 
        reset_hour=config.RESET_HOUR,
        timeout=config.TIMEOUT_MINUTES
    )
    
    await message.answer(help_text.strip(), parse_mode="HTML")
    logger.info(f"Help command used by {get_user_display_name(message.from_user)}")


@router.message(Command("stats"))
async def cmd_stats(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–µ—Ä–µ—Å—ã–ª–æ–∫ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤).
    """
    if not is_correct_chat(message):
        return
    
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
        logger.warning(f"Unauthorized stats attempt by {get_user_display_name(message.from_user)}")
        return
    
    today_count = db_repo.get_today_count()
    remaining = max(0, config.DAILY_LIMIT - today_count)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–µ—Ä–µ—Å—ã–ª–∫–∏ (–≥–ª–æ–±–∞–ª—å–Ω–æ)
    last_forward_time = db_repo.get_last_forward_time()
    timeout_info = ""
    
    if last_forward_time:
        tz = pytz.timezone(config.TIMEZONE)
        if isinstance(last_forward_time, str):
            last_forward_time = datetime.fromisoformat(last_forward_time).replace(tzinfo=tz)
        elif last_forward_time.tzinfo is None:
            last_forward_time = last_forward_time.replace(tzinfo=tz)
        
        now = datetime.now(tz)
        time_since_last = now - last_forward_time
        timeout_duration = timedelta(minutes=config.TIMEOUT_MINUTES)
        
        if time_since_last < timeout_duration:
            remaining_time = timeout_duration - time_since_last
            minutes = int(remaining_time.total_seconds() // 60)
            seconds = int(remaining_time.total_seconds() % 60)
            timeout_info = f"\n‚è≥ –î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∞–Ω–æ–Ω—Å–∞: {minutes}–º {seconds}—Å"
        else:
            timeout_info = "\n‚úÖ –ê–Ω–æ–Ω—Å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–µ–π—á–∞—Å"
    else:
        timeout_info = "\n‚úÖ –ê–Ω–æ–Ω—Å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–µ–π—á–∞—Å"
    
    stats_text = f"""
üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–æ–∫</b>

–°–µ–≥–æ–¥–Ω—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {today_count}/{config.DAILY_LIMIT}
–û—Å—Ç–∞–ª–æ—Å—å: {remaining}{timeout_info}
    """
    
    await message.answer(stats_text.strip(), parse_mode="HTML")
    logger.info(f"Stats viewed by admin {get_user_display_name(message.from_user)}")


@router.message(Command("reset"))
async def cmd_reset(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /reset.
    –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—á—ë—Ç—á–∏–∫ –ø–µ—Ä–µ—Å—ã–ª–æ–∫ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤).
    """
    if not is_correct_chat(message):
        return
    
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
        logger.warning(f"Unauthorized reset attempt by {get_user_display_name(message.from_user)}")
        return
    
    deleted = db_repo.reset_today()
    await message.answer(f"‚úÖ –°—á—ë—Ç—á–∏–∫ —Å–±—Ä–æ—à–µ–Ω. –£–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {deleted}")
    logger.info(f"Forwards reset by admin {get_user_display_name(message.from_user)}, deleted: {deleted}")


@router.message(Command("ban"))
async def cmd_ban(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /ban.
    –ë–∞–Ω–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤).
    –§–æ—Ä–º–∞—Ç: /ban @username hours [reason]
    """
    if not is_correct_chat(message):
        return
    
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
        logger.warning(f"Unauthorized ban attempt by {get_user_display_name(message.from_user)}")
        return
    
    # –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
    args = message.text.split()[1:]  # –£–±–∏—Ä–∞–µ–º /ban
    
    if len(args) < 2:
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /ban @username hours [reason]\n"
            "–ü—Ä–∏–º–µ—Ä: /ban @user123 24 –°–ø–∞–º"
        )
        return
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º username (—É–±–∏—Ä–∞–µ–º @ –µ—Å–ª–∏ –µ—Å—Ç—å)
    target_username = args[0].lstrip('@')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤
    try:
        hours = int(args[1])
        if hours <= 0:
            raise ValueError("Hours must be positive")
    except ValueError:
        await message.answer("‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
        return
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø—Ä–∏—á–∏–Ω—É (–µ—Å–ª–∏ –µ—Å—Ç—å)
    reason = " ".join(args[2:]) if len(args) > 2 else None
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    if message.reply_to_message and message.reply_to_message.from_user:
        target_user = message.reply_to_message.from_user
        target_user_id = target_user.id
        target_display_name = get_user_display_name(target_user)
    else:
        # –ï—Å–ª–∏ –Ω–µ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ username
        # –í —Ä–µ–∞–ª—å–Ω–æ–º –±–æ—Ç–µ –∑–¥–µ—Å—å –Ω—É–∂–Ω–æ –±—ã–ª–æ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å API Telegram –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å.")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ –±–∞–Ω–∏–º –∞–¥–º–∏–Ω–∞
    if target_user_id in config.ADMINS:
        await message.answer("‚ùå –ù–µ–ª—å–∑—è –∑–∞–±–∞–Ω–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return
    
    # –î–æ–±–∞–≤–ª—è–µ–º –±–∞–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    admin_name = get_user_display_name(message.from_user)
    ban_id = db_repo.add_ban(
        user_id=target_user_id,
        username=target_display_name,
        banned_by=message.from_user.id,
        banned_by_username=admin_name,
        hours=hours,
        reason=reason
    )
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –±–∞–Ω–µ
    ban_text = f"üî® <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω</b>\n\n"
    ban_text += f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {target_display_name}\n"
    ban_text += f"‚è∞ –°—Ä–æ–∫: {hours} —á–∞—Å–æ–≤\n"
    ban_text += f"üëÆ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {admin_name}\n"
    if reason:
        ban_text += f"üìù –ü—Ä–∏—á–∏–Ω–∞: {reason}\n"
    
    await message.answer(ban_text.strip(), parse_mode="HTML")
    logger.info(f"User {target_display_name} banned by {admin_name} for {hours} hours, reason: {reason}")


@router.message(Command("unban"))
async def cmd_unban(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /unban.
    –°–Ω–∏–º–∞–µ—Ç –±–∞–Ω —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤).
    –§–æ—Ä–º–∞—Ç: /unban @username –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    if not is_correct_chat(message):
        return
    
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
        logger.warning(f"Unauthorized unban attempt by {get_user_display_name(message.from_user)}")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    if message.reply_to_message and message.reply_to_message.from_user:
        target_user = message.reply_to_message.from_user
        target_user_id = target_user.id
        target_display_name = get_user_display_name(target_user)
    else:
        # –ï—Å–ª–∏ –Ω–µ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ username
        args = message.text.split()[1:]  # –£–±–∏—Ä–∞–µ–º /unban
        
        if len(args) < 1:
            await message.answer(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /unban @username\n"
                "–ò–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–º–∞–Ω–¥–æ–π /unban"
            )
            return
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º username (—É–±–∏—Ä–∞–µ–º @ –µ—Å–ª–∏ –µ—Å—Ç—å)
        target_username = args[0].lstrip('@')
        await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–±–∞–Ω–∏—Ç—å.")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–±–∞–Ω–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    ban_info = db_repo.is_user_banned(target_user_id)
    if not ban_info:
        await message.answer(f"‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target_display_name} –Ω–µ –∑–∞–±–∞–Ω–µ–Ω.")
        return
    
    # –°–Ω–∏–º–∞–µ–º –±–∞–Ω
    removed_count = db_repo.remove_ban(target_user_id)
    
    if removed_count > 0:
        admin_name = get_user_display_name(message.from_user)
        
        unban_text = f"‚úÖ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–∞–Ω–µ–Ω</b>\n\n"
        unban_text += f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {target_display_name}\n"
        unban_text += f"üëÆ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {admin_name}"
        
        await message.answer(unban_text.strip(), parse_mode="HTML")
        logger.info(f"User {target_display_name} unbanned by {admin_name}")
    else:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ –±–∞–Ω–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_display_name}.")


@router.message(Command("tea"))
async def cmd_tea(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /tea.
    –ü—É–±–ª–∏–∫—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª–µ —Å —É—á—ë—Ç–æ–º –ª–∏–º–∏—Ç–æ–≤, timeout –∏ –±–∞–Ω–æ–≤.
    """
    if not is_correct_chat(message):
        return
    
    user_id = message.from_user.id
    username = get_user_display_name(message.from_user)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–±–∞–Ω–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    ban_info = db_repo.is_user_banned(user_id)
    if ban_info:
        tz = pytz.timezone(config.TIMEZONE)
        ban_until = datetime.fromisoformat(ban_info['ban_until']).replace(tzinfo=tz)
        now = datetime.now(tz)
        remaining_time = ban_until - now
        
        hours = int(remaining_time.total_seconds() // 3600)
        minutes = int((remaining_time.total_seconds() % 3600) // 60)
        
        ban_text = f"üö´ <b>–í—ã –∑–∞–±–∞–Ω–µ–Ω—ã!</b>\n\n"
        ban_text += f"‚è∞ –û—Å—Ç–∞–ª–æ—Å—å: {hours}—á {minutes}–º\n"
        if ban_info.get('reason'):
            ban_text += f"üìù –ü—Ä–∏—á–∏–Ω–∞: {ban_info['reason']}\n"
        ban_text += f"üëÆ –ó–∞–±–∞–Ω–∏–ª: {ban_info['banned_by_username']}"
        
        await message.answer(ban_text.strip(), parse_mode="HTML")
        logger.warning(f"Banned user {username} tried to use /tea")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º timeout –º–µ–∂–¥—É –∞–Ω–æ–Ω—Å–∞–º–∏ (–≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
    last_forward_time = db_repo.get_last_forward_time()
    if last_forward_time:
        tz = pytz.timezone(config.TIMEZONE)
        if isinstance(last_forward_time, str):
            last_forward_time = datetime.fromisoformat(last_forward_time).replace(tzinfo=tz)
        elif last_forward_time.tzinfo is None:
            last_forward_time = last_forward_time.replace(tzinfo=tz)
        
        now = datetime.now(tz)
        time_since_last = now - last_forward_time
        timeout_duration = timedelta(minutes=config.TIMEOUT_MINUTES)
        
        if time_since_last < timeout_duration:
            remaining_time = timeout_duration - time_since_last
            minutes = int(remaining_time.total_seconds() // 60)
            seconds = int(remaining_time.total_seconds() % 60)
            
            await message.answer(
                f"‚è≥ –°–ª–∏—à–∫–æ–º —Ä–∞–Ω–æ! –°–ª–µ–¥—É—é—â–∏–π –∞–Ω–æ–Ω—Å —á–µ—Ä–µ–∑ {minutes}–º {seconds}—Å",
                parse_mode="HTML"
            )
            logger.warning(f"Global timeout violation by {username}, {minutes}m {seconds}s remaining")
            return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç
    today_count = db_repo.get_today_count()
    if today_count >= config.DAILY_LIMIT:
        await message.answer("‚è∞ –°–ª–µ–¥—É—é—â–∏–π –∞–Ω–æ–Ω—Å –∑–∞–≤—Ç—Ä–∞!")
        logger.warning(f"Limit reached for {username}")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    username = get_user_display_name(message.from_user)
    custom_text = extract_custom_text(message)
    message_type = get_message_type(message)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å
    caption = format_tea_caption(username, custom_text)
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∫–∞–Ω–∞–ª –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        if message.photo:
            # –ë–µ—Ä—ë–º —Ñ–æ—Ç–æ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º
            photo = message.photo[-1]
            await message.bot.send_photo(
                chat_id=config.CHANNEL_ID,
                photo=photo.file_id,
                caption=caption
            )
        elif message.video:
            await message.bot.send_video(
                chat_id=config.CHANNEL_ID,
                video=message.video.file_id,
                caption=caption
            )
        elif message.video_note:
            # –í–∏–¥–µ–æ-–∑–∞–º–µ—Ç–∫–∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç caption
            await message.bot.send_video_note(
                chat_id=config.CHANNEL_ID,
                video_note=message.video_note.file_id
            )
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º caption –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
            await message.bot.send_message(
                chat_id=config.CHANNEL_ID,
                text=caption
            )
        else:
            # –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await message.bot.send_message(
                chat_id=config.CHANNEL_ID,
                text=caption
            )
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ë–î
        db_repo.add_forward(username, message_type)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á—ë—Ç—á–∏–∫
        remaining = config.DAILY_LIMIT - today_count - 1
        await message.answer(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –û—Å—Ç–∞–ª–æ—Å—å {remaining} –ø–µ—Ä–µ—Å—ã–ª–æ–∫.")
        
        logger.info(f"Sent {message_type} tea by {username}")
        
    except TelegramAPIError as e:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª.")
        logger.error(f"Failed to send message to channel: {e}")
    except Exception as e:
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.")
        logger.error(f"Unexpected error in tea command: {e}")

